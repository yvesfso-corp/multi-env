name: 'Azure CD Workflow'

# permissions: 
#   id-token: write
#   contents: write
#   issues: write
#   pull-requests: write
#   checks: write
#   actions: write
#   packages: read
#   deployments: write

permissions: read-all

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      iupipes-config-path:
        required: false
        type: string
        default: '.iupipes.yml'
      infra-working-directory:
        required: false
        type: string
        default: 'infra'
      infra-terraform-version:
        required: false
        type: string
        default: '1.1.9'
      infra-terragrunt-version:
        required: false
        type: string
        default: 'v0.45.16'
      environment:
        required: true
        type: string
        
    secrets:
      GH_ADMIN:
        required: true


jobs:
  # This workflow contains a single job called "greet"
  check-changed-files:
    outputs:
      changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}

    # The type of runner that the job will run on
    runs-on: ${{ inputs.runs-on }}    
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: ./.github/actions/test/
      
      # # - name: fetching commits
      # #   id: fetch-commits
      # #   run: |
      # #     git fetch --depth 1000 origin ${{ github.head_ref }}

      # # Runs a single command using the runners shell
      # - name: Get changed files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v45
      #   with:
      #     # fetch_depth: "100"
      #     path: "."
      #     # path: ".${{ inputs.infra-working-directory }}"
      #     # sha: "${{ github.ref_name }}"
      #     base_sha: "main"
      #     since_last_remote_commit: "true"
      #     # base_sha: ${{ steps.last_successful_commit_pull_request.outputs.base }}
      #     dir_names: true
      #     files: "*.hcl"
      #   # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
      #   # with:
      #   #   since_last_remote_commit: true 
      
      # - name: Set outputs
      #   id: set-outputs
      #   run: |
      #     echo "::set-output name=all_changed_files::${{ steps.changed-files.outputs.all_changed_files }}"
      #     echo "::set-output name=any_changed::${{ steps.changed-files.outputs.any_changed }}"
          
  get-env-variable:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve environment variable
        id: get-env
        run: |
          curl -H "Authorization: token ${{ secrets.GH_ADMIN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository_owner }}/${{ github.repository }}/environments/${{ inputs.environment }}/variables/WORKING_DIR

      - name: Display environment variable
        run: |
          echo "The environment variable value is: ${{ steps.get-env.outputs.var-value }}"

  # cd:
  #   needs: check-changed-files
  #   environment: ${{ inputs.environment }}
  #   # The type of runner that the job will run on
  #   runs-on: ${{ inputs.runs-on }}

  #   steps:
  #     - name: List all changed files
  #       if : ${{ needs.check-changed-files.outputs.any_changed == 'true' }}
  #       env:
  #         ALL_CHANGED_FILES: ${{ needs.check-changed-files.outputs.changed-files }}
  #       run: |
  #         for file in ${ALL_CHANGED_FILES}; do
  #           echo "$file was changed"
  #         done
    
  # check-pending-workflows:
  #   outputs:
  #       environment_id: ${{ steps.environment-id.outputs.result }}
  #   needs: check-changed-files
  #   if : ${{ needs.check-changed-files.outputs.any_changed == 'false' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Sleep for 5 seconds
  #     run: sleep 5s    

  #   - name: Get environment id
  #     uses: actions/github-script@v6
  #     id: environment-id
  #     with:
  #       script: |
  #         const environmentResponse = await github.rest.repos.getEnvironment({
  #           owner: context.repo.owner,
  #           repo: context.repo.repo,
  #           environment_name: '${{ inputs.environment }}'
  #         });
  #         const environmentId = environmentResponse.data.id;
  #         console.log("Env:", environmentId);
  #         return environmentId;
    
  #   - name: Get pending deployments
  #     uses: actions/github-script@v7
  #     env:
  #       GH_TOKEN: ${{ secrets.GH_ADMIN }}
  #       OWNER: ${{ github.repository_owner }}
  #       REPO: ${{ github.event.repository.name }}
  #     with:
  #       # github-token: ${{ github.token }}
  #       script: |
  #         const result = await github.rest.actions.getPendingDeploymentsForRun({
  #           owner: context.repo.owner,
  #           repo: context.repo.repo,
  #           run_id: ${{ github.run_id }}
  #         })
  #         console.log(result.data[0])

  # approve-pending-workflows:
  #   needs: check-pending-workflows
  #   if : ${{ needs.check-changed-files.outputs.any_changed == 'false' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Approve workflow2
  #     uses: actions/github-script@v6
  #     env:      
  #       GH_TOKEN: ${{ secrets.GH_ADMIN }}
  #       OWNER: ${{ github.repository_owner }}
  #       REPO: ${{ github.event.repository.name }}
  #     with:
  #       # github-token: ${{ github.token }}
  #       script: |
  #         await github.rest.actions.reviewPendingDeploymentsForRun({
  #           owner: context.repo.owner,
  #           repo: context.repo.repo,
  #           run_id: context.runId,
  #           environment_ids: [${{ needs.check-pending-workflows.outputs.environment_id }}],
  #           state: 'approved',
  #           comment: 'Ship it!',
  #         });

  #   # - name: Approve workflow
  #   #   env:
  #   #       GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   #   run: |
  #   #     gh api --verbose                                      \
  #   #     repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}/pending_deployments \
  #   #     --method POST                                       \
  #   #     -H "Authorization: Bearer ${{ github.token }}" \
  #   #     -F "environment_ids[]=${{ steps.environment-id.outputs.result }}"                       \
  #   #     -f "state=approved"                                 \
  #   #     -f "comment=Auto-Approved by GitHub Actions" 

  #   # - name: Approve workflow
  #   #   uses: actions/github-script@v7
  #   #   with:
  #   #     github-token: ${{ secrets.GITHUB_TOKEN }}
  #   #     script: |
  #   #       await github.rest.actions.reviewPendingDeploymentsForRun({
  #   #         owner: context.repo.owner,
  #   #         repo: context.repo.repo,
  #   #         run_id: ${{ github.run_id }},
  #   #         environment_ids: [
  #   #           '${{ steps.environment-id.outputs.result }}'
  #   #         ],
  #   #         state: 'approved',
  #   #         comment: 'Ship it!',
  #   #       })
