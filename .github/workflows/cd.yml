name: 'Azure CD Workflow'

# permissions:
#   id-token: write
#   contents: write
#   issues: write
#   pull-requests: write
#   checks: write
#   actions: write
#   packages: read

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      iupipes-config-path:
        required: false
        type: string
        default: '.iupipes.yml'
      infra-working-directory:
        required: false
        type: string
        default: 'infra'
      infra-terraform-version:
        required: false
        type: string
        default: '1.1.9'
      infra-terragrunt-version:
        required: false
        type: string
        default: 'v0.45.16'
      environment:
        required: true
        type: string

jobs:
  # This workflow contains a single job called "greet"
  check-changed-files:
    outputs:
      changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}

    # The type of runner that the job will run on
    runs-on: ${{ inputs.runs-on }}    
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
      
      # Runs a single command using the runners shell
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          path: .${{ inputs.infra-working-directory }}
          sha: main
          dir_names: true
          files: "**/*.hcl"
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
        #   since_last_remote_commit: true 
      
      - name: Set outputs
        id: set-outputs
        run: |
          echo "::set-output name=all_changed_files::${{ steps.changed-files.outputs.all_changed_files }}"
          echo "::set-output name=any_changed::${{ steps.changed-files.outputs.any_changed }}"

  cd:
    needs: check-changed-files
    if : ${{ needs.check-changed-files.outputs.any_changed == 'true' }}
    
    environment: ${{ inputs.environment }}
    # The type of runner that the job will run on
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: List all changed files        
        env:
          ALL_CHANGED_FILES: ${{ needs.check-changed-files.outputs.changed-files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done


    