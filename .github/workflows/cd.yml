name: 'Azure CD Workflow'

# permissions:
#   id-token: write
#   contents: write
#   issues: write
#   pull-requests: write
#   checks: write
#   actions: write
#   packages: read

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      iupipes-config-path:
        required: false
        type: string
        default: '.iupipes.yml'
      infra-working-directory:
        required: false
        type: string
        default: 'infra'
      infra-terraform-version:
        required: false
        type: string
        default: '1.1.9'
      infra-terragrunt-version:
        required: false
        type: string
        default: 'v0.45.16'
      environment:
        required: true
        type: string

jobs:
  # This workflow contains a single job called "greet"
  check-changed-files:
    outputs:
      changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}

    # The type of runner that the job will run on
    runs-on: ${{ inputs.runs-on }}    
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Runs a single command using the runners shell
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          path: .${{ inputs.infra-working-directory }}
          # sha: 'origin/main'
          base_sha: 'main'          
          dir_names: true
          files: "**/*.hcl"
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
        #   since_last_remote_commit: true 
      
      - name: Set outputs
        id: set-outputs
        run: |
          echo "::set-output name=all_changed_files::${{ steps.changed-files.outputs.all_changed_files }}"
          echo "::set-output name=any_changed::${{ steps.changed-files.outputs.any_changed }}"

  cd:
    needs: check-changed-files
    environment: ${{ inputs.environment }}
    # The type of runner that the job will run on
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: List all changed files
        if : ${{ needs.check-changed-files.outputs.any_changed == 'true' }}
        env:
          ALL_CHANGED_FILES: ${{ needs.check-changed-files.outputs.changed-files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
    
  approve-workflow:
    needs: check-changed-files
    if : ${{ needs.check-changed-files.outputs.any_changed == 'false' }}
    runs-on: ubuntu-latest
    steps:
    - name: Sleep for 10 seconds
      run: sleep 10s      
    
    - name: Get environment id
      uses: actions/github-script@v6
      id: environment-id
      with:
        script: |
          const environmentResponse = await github.rest.repos.getEnvironment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            environment_name: '${{ inputs.environment }}'
          });
          const environmentId = environmentResponse.data.id;
          console.log("Env:", environmentId);
          return environmentId;
    
    - name: Approve workflow
      uses: actions/github-script@v6
      env:
        GH_TOKEN: ${{ github.token }}
      with:
        github-token: ${{ github.token }}
        script: |
          await github.rest.actions.reviewPendingDeploymentsForRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId,
            environment_ids: [${{ steps.environment-id.outputs.result }}],
            state: 'approved',
            comment: 'Ship it!',
          });


    